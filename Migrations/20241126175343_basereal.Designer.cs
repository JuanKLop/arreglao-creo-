// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValorConFloat.Models;

#nullable disable

namespace ValorConFloat.Migrations
{
    [DbContext(typeof(PruebaFloatContext))]
    [Migration("20241126175343_basereal")]
    partial class basereal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ValorConFloat.Models.Abono", b =>
                {
                    b.Property<int>("Idabono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAbono");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idabono"));

                    b.Property<double?>("CantAbono")
                        .HasColumnType("float");

                    b.Property<byte[]>("Comprobante")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("FechaAbono")
                        .HasColumnType("date");

                    b.Property<int?>("Idreserva")
                        .HasColumnType("int")
                        .HasColumnName("IDReserva");

                    b.Property<double?>("Pendiente")
                        .HasColumnType("float");

                    b.Property<double?>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<double?>("ValorDeuda")
                        .HasColumnType("float");

                    b.HasKey("Idabono")
                        .HasName("PK__Abono__8647F8A90FAF0312");

                    b.HasIndex("Idreserva");

                    b.ToTable("Abono", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.Cliente", b =>
                {
                    b.Property<string>("NroDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("NroDocumento")
                        .HasName("PK__Clientes__CC62C91CB7C85265");

                    b.HasIndex("Idrol");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ValorConFloat.Models.DetalleReservaPaquete", b =>
                {
                    b.Property<int>("IddetalleReservaPaquetes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDDetalleReservaPaquetes");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IddetalleReservaPaquetes"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Idpaquete")
                        .HasColumnType("int")
                        .HasColumnName("IDPaquete");

                    b.Property<int?>("Idreserva")
                        .HasColumnType("int")
                        .HasColumnName("IDReserva");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.HasKey("IddetalleReservaPaquetes")
                        .HasName("PK__DetalleR__64F9FDAE5E5AF43D");

                    b.HasIndex("Idpaquete");

                    b.HasIndex("Idreserva");

                    b.ToTable("DetalleReservaPaquetes");
                });

            modelBuilder.Entity("ValorConFloat.Models.DetalleReservaServicio", b =>
                {
                    b.Property<int>("IddetalleReservaServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDDetalleReservaServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IddetalleReservaServicio"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Idreserva")
                        .HasColumnType("int")
                        .HasColumnName("IDReserva");

                    b.Property<int?>("Idservicio")
                        .HasColumnType("int")
                        .HasColumnName("IDServicio");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.HasKey("IddetalleReservaServicio")
                        .HasName("PK__DetalleR__B52B22F856C9DE00");

                    b.HasIndex("Idreserva");

                    b.HasIndex("Idservicio");

                    b.ToTable("DetalleReservaServicio", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.EstadosReserva", b =>
                {
                    b.Property<int>("IdEstadoReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoReserva"));

                    b.Property<string>("NombreEstadoReserva")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdEstadoReserva")
                        .HasName("PK__EstadosR__3E654CA81C24A996");

                    b.ToTable("EstadosReserva", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.Habitacion", b =>
                {
                    b.Property<int>("Idhabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDHabitacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idhabitacion"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdtipodeHabitacion")
                        .HasColumnType("int")
                        .HasColumnName("IDTipodeHabitacion");

                    b.Property<byte[]>("ImagenHabitacion")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombreHabitacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Idhabitacion")
                        .HasName("PK__Habitaci__6B4757DA2C597849");

                    b.HasIndex("IdtipodeHabitacion");

                    b.ToTable("Habitacion", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.HabitacionMueble", b =>
                {
                    b.Property<int>("IdhabitacionMuebles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDHabitacionMuebles");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdhabitacionMuebles"));

                    b.Property<int>("CantidadUsada")
                        .HasColumnType("int");

                    b.Property<int?>("Idhabitacion")
                        .HasColumnType("int")
                        .HasColumnName("IDHabitacion");

                    b.Property<int?>("Idmueble")
                        .HasColumnType("int")
                        .HasColumnName("IDMueble");

                    b.HasKey("IdhabitacionMuebles")
                        .HasName("PK__Habitaci__65CFCA9A17EB8B03");

                    b.HasIndex("Idhabitacion");

                    b.HasIndex("Idmueble");

                    b.ToTable("HabitacionMuebles");
                });

            modelBuilder.Entity("ValorConFloat.Models.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<string>("NomMetodoPago")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdMetodoPago")
                        .HasName("PK__MetodoPa__6F49A9BE9A98C9A3");

                    b.ToTable("MetodoPago", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.Mueble", b =>
                {
                    b.Property<int>("Idmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDMueble");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmueble"));

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImagenMueble")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombreMueble")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Idmueble")
                        .HasName("PK__Muebles__EAC9F7C835284D5B");

                    b.ToTable("Muebles");
                });

            modelBuilder.Entity("ValorConFloat.Models.Paquete", b =>
                {
                    b.Property<int>("Idpaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPaquete");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpaquete"));

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Idhabitacion")
                        .HasColumnType("int")
                        .HasColumnName("IDHabitacion");

                    b.Property<int?>("Idservicio")
                        .HasColumnType("int")
                        .HasColumnName("IDServicio");

                    b.Property<byte[]>("ImagenPaquete")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NombrePaquete")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Idpaquete")
                        .HasName("PK__Paquetes__4C29513BCEEB6D7F");

                    b.HasIndex("Idhabitacion");

                    b.HasIndex("Idservicio");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("ValorConFloat.Models.Permiso", b =>
                {
                    b.Property<int>("Idpermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpermiso"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstadoPermisos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("NombrePermisos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idpermiso")
                        .HasName("PK__Permisos__F11D75F336E83022");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ValorConFloat.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<double?>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateOnly?>("FechaFinalizacion")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaReserva")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEstadoReserva")
                        .HasColumnType("int");

                    b.Property<double?>("Iva")
                        .HasColumnType("float")
                        .HasColumnName("IVA");

                    b.Property<int?>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<double?>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<string>("NroDocumentoCliente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("SubTotal")
                        .HasColumnType("float");

                    b.HasKey("IdReserva")
                        .HasName("PK__Reserva__0E49C69D10FD7BE6");

                    b.HasIndex("IdEstadoReserva");

                    b.HasIndex("MetodoPago");

                    b.HasIndex("NroDocumentoCliente");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.Role", b =>
                {
                    b.Property<int>("Idrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idrol"));

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idrol")
                        .HasName("PK__Roles__A681ACB6519DF333");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ValorConFloat.Models.RolesPermiso", b =>
                {
                    b.Property<int>("IdrolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDRolPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdrolPermiso"));

                    b.Property<int?>("Idpermiso")
                        .HasColumnType("int")
                        .HasColumnName("IDPermiso");

                    b.Property<int?>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.HasKey("IdrolPermiso")
                        .HasName("PK__RolesPer__3F09FABF21586D73");

                    b.HasIndex("Idpermiso");

                    b.HasIndex("Idrol");

                    b.ToTable("RolesPermisos");
                });

            modelBuilder.Entity("ValorConFloat.Models.Servicio", b =>
                {
                    b.Property<int>("Idservicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idservicio"));

                    b.Property<int>("CantidadMaximaPersonas")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Duracion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Idservicio")
                        .HasName("PK__Servicio__3CCE7416C9E4E757");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("ValorConFloat.Models.TipodeHabitacion", b =>
                {
                    b.Property<int>("IdtipodeHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTipodeHabitacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdtipodeHabitacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreTipodeHabitacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdtipodeHabitacion")
                        .HasName("PK__TipodeHa__9BD4086CCBE5D055");

                    b.ToTable("TipodeHabitacion", (string)null);
                });

            modelBuilder.Entity("ValorConFloat.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contrasena")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Cuidad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idusuario")
                        .HasName("PK__Usuarios__52311169DAB54B9C");

                    b.HasIndex("Idrol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ValorConFloat.Models.Abono", b =>
                {
                    b.HasOne("ValorConFloat.Models.Reserva", "IdreservaNavigation")
                        .WithMany("Abonos")
                        .HasForeignKey("Idreserva")
                        .HasConstraintName("FK_Abono_Reserva");

                    b.Navigation("IdreservaNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.Cliente", b =>
                {
                    b.HasOne("ValorConFloat.Models.Role", "IdrolNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("Idrol")
                        .HasConstraintName("FK_Clientes_Roles");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.DetalleReservaPaquete", b =>
                {
                    b.HasOne("ValorConFloat.Models.Paquete", "IdpaqueteNavigation")
                        .WithMany("DetalleReservaPaquetes")
                        .HasForeignKey("Idpaquete")
                        .HasConstraintName("FK_DetalleReservaPaquetes_Paquete");

                    b.HasOne("ValorConFloat.Models.Reserva", "IdreservaNavigation")
                        .WithMany("DetalleReservaPaquetes")
                        .HasForeignKey("Idreserva")
                        .HasConstraintName("FK_DetalleReservaPaquetes_Reserva");

                    b.Navigation("IdpaqueteNavigation");

                    b.Navigation("IdreservaNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.DetalleReservaServicio", b =>
                {
                    b.HasOne("ValorConFloat.Models.Reserva", "IdreservaNavigation")
                        .WithMany("DetalleReservaServicios")
                        .HasForeignKey("Idreserva")
                        .HasConstraintName("FK_DetalleReservaServicio_Reserva");

                    b.HasOne("ValorConFloat.Models.Servicio", "IdservicioNavigation")
                        .WithMany("DetalleReservaServicios")
                        .HasForeignKey("Idservicio")
                        .HasConstraintName("FK_DetalleReservaServicio_Servicio");

                    b.Navigation("IdreservaNavigation");

                    b.Navigation("IdservicioNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.Habitacion", b =>
                {
                    b.HasOne("ValorConFloat.Models.TipodeHabitacion", "IdtipodeHabitacionNavigation")
                        .WithMany("Habitacions")
                        .HasForeignKey("IdtipodeHabitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Habitacion_TipodeHabitacion");

                    b.Navigation("IdtipodeHabitacionNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.HabitacionMueble", b =>
                {
                    b.HasOne("ValorConFloat.Models.Habitacion", "IdhabitacionNavigation")
                        .WithMany("HabitacionMuebles")
                        .HasForeignKey("Idhabitacion")
                        .HasConstraintName("FK_HabitacionMuebles_Habitacion");

                    b.HasOne("ValorConFloat.Models.Mueble", "IdmuebleNavigation")
                        .WithMany("HabitacionMuebles")
                        .HasForeignKey("Idmueble")
                        .HasConstraintName("FK_HabitacionMuebles_Muebles");

                    b.Navigation("IdhabitacionNavigation");

                    b.Navigation("IdmuebleNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.Paquete", b =>
                {
                    b.HasOne("ValorConFloat.Models.Habitacion", "IdhabitacionNavigation")
                        .WithMany("Paquetes")
                        .HasForeignKey("Idhabitacion")
                        .HasConstraintName("FK_Habitacione_Paquetes");

                    b.HasOne("ValorConFloat.Models.Servicio", "IdservicioNavigation")
                        .WithMany("Paquetes")
                        .HasForeignKey("Idservicio")
                        .HasConstraintName("FK_Servicio_Paquetes");

                    b.Navigation("IdhabitacionNavigation");

                    b.Navigation("IdservicioNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.Reserva", b =>
                {
                    b.HasOne("ValorConFloat.Models.EstadosReserva", "IdEstadoReservaNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdEstadoReserva")
                        .HasConstraintName("FK__Reserva__IdEstad__6A30C649");

                    b.HasOne("ValorConFloat.Models.MetodoPago", "MetodoPagoNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("MetodoPago")
                        .HasConstraintName("FK__Reserva__MetodoP__6B24EA82");

                    b.HasOne("ValorConFloat.Models.Cliente", "NroDocumentoClienteNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("NroDocumentoCliente")
                        .HasConstraintName("FK__Reserva__NroDocu__693CA210");

                    b.Navigation("IdEstadoReservaNavigation");

                    b.Navigation("MetodoPagoNavigation");

                    b.Navigation("NroDocumentoClienteNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.RolesPermiso", b =>
                {
                    b.HasOne("ValorConFloat.Models.Permiso", "IdpermisoNavigation")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("Idpermiso")
                        .HasConstraintName("FK__RolesPerm__IDPer__5165187F");

                    b.HasOne("ValorConFloat.Models.Role", "IdrolNavigation")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("Idrol")
                        .HasConstraintName("FK__RolesPerm__IDRol__5070F446");

                    b.Navigation("IdpermisoNavigation");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.Usuario", b =>
                {
                    b.HasOne("ValorConFloat.Models.Role", "IdrolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Idrol")
                        .HasConstraintName("FK__Usuarios__IDRol__5441852A");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("ValorConFloat.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ValorConFloat.Models.EstadosReserva", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ValorConFloat.Models.Habitacion", b =>
                {
                    b.Navigation("HabitacionMuebles");

                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("ValorConFloat.Models.MetodoPago", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ValorConFloat.Models.Mueble", b =>
                {
                    b.Navigation("HabitacionMuebles");
                });

            modelBuilder.Entity("ValorConFloat.Models.Paquete", b =>
                {
                    b.Navigation("DetalleReservaPaquetes");
                });

            modelBuilder.Entity("ValorConFloat.Models.Permiso", b =>
                {
                    b.Navigation("RolesPermisos");
                });

            modelBuilder.Entity("ValorConFloat.Models.Reserva", b =>
                {
                    b.Navigation("Abonos");

                    b.Navigation("DetalleReservaPaquetes");

                    b.Navigation("DetalleReservaServicios");
                });

            modelBuilder.Entity("ValorConFloat.Models.Role", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("RolesPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ValorConFloat.Models.Servicio", b =>
                {
                    b.Navigation("DetalleReservaServicios");

                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("ValorConFloat.Models.TipodeHabitacion", b =>
                {
                    b.Navigation("Habitacions");
                });
#pragma warning restore 612, 618
        }
    }
}
